<?php

namespace DoctrineMongoODMModule\Hydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class ApplicationEntityMongoCategoriesHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['name'])) {
            $value = $data['name'];
            $return = (string) $value;
            $this->class->reflFields['name']->setValue($document, $return);
            $hydratedData['name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['alias'])) {
            $value = $data['alias'];
            $return = (string) $value;
            $this->class->reflFields['alias']->setValue($document, $return);
            $hydratedData['alias'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['state'])) {
            $value = $data['state'];
            $return = (int) $value;
            $this->class->reflFields['state']->setValue($document, $return);
            $hydratedData['state'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['featured'])) {
            $value = $data['featured'];
            $return = (bool) $value;
            $this->class->reflFields['featured']->setValue($document, $return);
            $hydratedData['featured'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['menu'])) {
            $value = $data['menu'];
            $return = (bool) $value;
            $this->class->reflFields['menu']->setValue($document, $return);
            $hydratedData['menu'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['description'])) {
            $value = $data['description'];
            $return = (string) $value;
            $this->class->reflFields['description']->setValue($document, $return);
            $hydratedData['description'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['content'])) {
            $value = $data['content'];
            $return = (string) $value;
            $this->class->reflFields['content']->setValue($document, $return);
            $hydratedData['content'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['parent'])) {
            $reference = $data['parent'];
            if (isset($this->class->fieldMappings['parent']['simple']) && $this->class->fieldMappings['parent']['simple']) {
                $className = $this->class->fieldMappings['parent']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['parent'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['parent']->setValue($document, $return);
            $hydratedData['parent'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['created'])) {
            $value = $data['created'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['created']->setValue($document, clone $return);
            $hydratedData['created'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updated'])) {
            $value = $data['updated'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['updated']->setValue($document, clone $return);
            $hydratedData['updated'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['author'])) {
            $reference = $data['author'];
            if (isset($this->class->fieldMappings['author']['simple']) && $this->class->fieldMappings['author']['simple']) {
                $className = $this->class->fieldMappings['author']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['author'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['author']->setValue($document, $return);
            $hydratedData['author'] = $return;
        }
        return $hydratedData;
    }
}